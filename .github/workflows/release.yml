name: Release Go Binary

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Set up output names
        id: set-names
        shell: bash
        run: |
          BINARY_NAME="text2voicevox"
          if [ "${{ runner.os }}" == "Windows" ]; then
            BINARY_NAME+=".exe"
            ASSET_NAME="${BINARY_NAME%.*}-windows-amd64.zip"
          elif [ "${{ runner.os }}" == "Linux" ]; then
            ASSET_NAME="${BINARY_NAME}-linux-amd64.tar.gz"
          else
            ASSET_NAME="${BINARY_NAME}-macos-amd64.zip"
          fi
          echo "BINARY_NAME=${BINARY_NAME}" >> $GITHUB_ENV
          echo "ASSET_NAME=${ASSET_NAME}" >> $GITHUB_ENV

      - name: Build Go application
        run: go build -v -o ${{ env.BINARY_NAME }} .

      - name: Archive the binary
        shell: bash
        run: |
          if [ "${{ runner.os }}" == "Windows" ]; then
            7z a ${{ env.ASSET_NAME }} ${{ env.BINARY_NAME }}
          elif [ "${{ runner.os }}" == "Linux" ]; then
            tar -czvf ${{ env.ASSET_NAME }} ${{ env.BINARY_NAME }}
          else
            zip ${{ env.ASSET_NAME }} ${{ env.BINARY_NAME }}
          fi

      - name: Upload artifact for release
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ASSET_NAME }}
          path: ${{ env.ASSET_NAME }}

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/*/*

